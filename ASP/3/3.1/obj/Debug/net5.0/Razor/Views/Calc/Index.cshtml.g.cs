#pragma checksum "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "52d7e2933370c3727f426acdd5eadb40b09fe3b6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Calc_Index), @"mvc.1.0.view", @"/Views/Calc/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"52d7e2933370c3727f426acdd5eadb40b09fe3b6", @"/Views/Calc/Index.cshtml")]
    public class Views_Calc_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<_3._1.Models.Calculate>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
  
	ViewBag.Title = "Calc";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<table>\r\n\t<tr>\r\n\t\t<td>\r\n\t\t\t<input type=\"text\" id=\"oper1\"");
            BeginWriteAttribute("value", " value=\"", 122, "\"", 142, 1);
#nullable restore
#line 9 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
WriteAttributeValue("", 130, Model.Oper1, 130, 12, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<select id=\"operation\" >\r\n\t\t\t\t<option ");
#nullable restore
#line 13 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
                    Write(Model.Operation == "+" ? "selected='selected'" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" value=\"+\">+</option>\r\n\t\t\t\t<option ");
#nullable restore
#line 14 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
                    Write(Model.Operation == "-" ? "selected='selected'" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" value=\"-\">-</option>\r\n\t\t\t\t<option ");
#nullable restore
#line 15 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
                    Write(Model.Operation == "*" ? "selected='selected'" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" value=\"*\">*</option>\r\n\t\t\t\t<option ");
#nullable restore
#line 16 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
                    Write(Model.Operation == "/" ? "selected='selected'" : "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" value=\"/\">/</option>\r\n\t\t\t</select>\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<input type=\"text\" id=\"oper2\"");
            BeginWriteAttribute("value", " value=\"", 613, "\"", 633, 1);
#nullable restore
#line 20 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
WriteAttributeValue("", 621, Model.Oper2, 621, 12, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<input type=\"button\" value=\"=\" onclick=\"calculate()\" />\r\n\t\t</td>\r\n\t\t<td>\r\n\t\t\t<span>");
#nullable restore
#line 26 "C:\Training\Project\Vitchenko_HW_Essential_Git\Vitchenko_HW\ASP\3\3.1\Views\Calc\Index.cshtml"
             Write(Model.Result);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>
		</td>
	</tr>
</table>

<script type=""text/javascript"">
	function calculate() {

		const operand1Value = document.getElementById(""oper1"").value;
		const operand2Value = document.getElementById(""oper2"").value;
		const operationValue = document.getElementById(""operation"").value;

		const operationUrlPart = getOperationPath(operationValue);

		window.location = ""/calc/"" + operationUrlPart + ""/"" + operand1Value + ""/"" + operand2Value;
		}

		function getOperationPath(operation) {
			switch (operation) {
				case ""-"":
					return ""Sub"";
				case ""*"":
					return ""Mul"";
				case ""/"":
					return ""Div"";
				default:
					return ""Add"";
			}
		}
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<_3._1.Models.Calculate> Html { get; private set; }
    }
}
#pragma warning restore 1591
